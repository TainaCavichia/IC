######### LAMMPS INPUT SCRIPT ################################################################

#cria variável temperatura igual a 1
variable        t 	equal 1.0

######### INICIALIZAÇÃO (antes dos átomos serem criados): ####################################

#unidades do tipo "lennard-jones" são as unidades reduzidas
units		lj

#dimensões da simulação: 3 (X, Y, Z)
dimension	3

#especifica o tipo/estilo de partícula: pode ser carga, molécula, etc. 
atom_style	atomic

#especifica que a caixa será periódica nas 3 dimensões
boundary	p p p


######### DEFINIÇÃO DO SISTEMA ###############################################################

#define uma região geométrica do espaço => pode ser esfera, prisma, bloco, etc. Nome: "simbox"
#cada número representa os lados da caixa: de 0 a 40 em x, y e z respectivamente.
region          simbox block 0 40 0 40 0 40

#cria a caixa de simulação com base na região "simbox", indicando apenas 1 tipo de átomo
create_box      1 simbox

#cria único átomo do tipo 1 na posição definida em x, y e z
create_atoms    1 single 10.0 10.0 10.0

#define massa do(s) átomo(s) do tipo 1 como 1.0 nas unidades de lj
mass            1 1.0

#aplica velocidade para todas as partículas em x, y e z
velocity        all set 0.05 0.3 0.26

######### CONFIGURAÇÕES DE SIMULAÇÃO #########################################################

#define o tipo de potencial de interação entre os pares e o raio de corte (interação) de 2.5
pair_style      lj/cut 2.5

#interação de átomo 1 com 1 e coeficientes necessários para interação lj 
pair_coeff	1 1 1.0 1.0 2.5

#atualiza qualquer parâmetro durante os passos no tempo, como posições, velocidades, temp, etc
#identificador do fix 1 e 2, aplicado para todos os átomos; N partículas, Volume e Energia cte
#para isso, esse comando aplica o algoritmo "Velocity Verlet" (integra equações de movimento)
fix             1 all nve

#controla a temperatura temp inicial == temp final, *damp-viscosidade e seed
fix	        2 all langevin $t $t 0.1 49587

#passo no tempo - pode aumentar
timestep	0.05

#calcula o msd das partículas
compute         MSD all msd
variable        twopoint equal c_MSD[4]/6/(step*dt+1.0e-6)
fix             9 all vector 10 c_MSD[4]
variable        fitslope equal slope(f_9)/6/(10*dt)

#computa as informações termodinâmicas (temp, energia, pressão) a cada 100 passos no tempo 
thermo 100

#define o estilo da exibição dos dados
thermo_style custom step c_MSD[1] c_MSD[2] c_MSD[3] c_MSD[4] v_twopoint v_fitslope

#gera um arquivo com todas as partículas, a cada N=100 passos no tempo, nome do arquivo
dump mydmp all custom 100 dump.lammpstrj x y z vx vy vz

######### RODANDO SIMULAÇÃO ##################################################################

#computa quantidade total de passos: 50.000
run	        50000


